name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1    # cluster name
  GKE_ZONE: us-central1   # cluster zone
  IMAGE: micro # image name
  IMAGE_TAG: test # image tag
  GAR_ZONE: europe-central2 # artifact registry zone
  GAR_REPO: obiwan # artifact registry repository
  DEPLOYMENT_NAME: gke-test # Add your deployment name here.

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - name: Docker configuration
      run: |-
        gcloud --quiet auth configure-docker

#     # Configure Docker to use the gcloud command-line tool as a credential
#     # helper for authentication
#     - run: |-
#         gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    # - name: Set up GKE credentials
    #   uses: google-github-actions/get-gke-credentials@v0
    #   with:
    #     cluster_name: ${{ env.GKE_CLUSTER }}
    #     location: ${{ env.GKE_ZONE }}
    - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    - name: Deploy to GKE
      run: |
        kubectl set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide


# #     # # Deploy the Docker image to the GKE cluster
# #     # - name: Deploy
# #     #   run: |-
# #     #     ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
# #     #     ./kustomize build . | kubectl apply -f -
# #     #     kubectl rollout status deployment/$DEPLOYMENT_NAME
# #     #     kubectl get services -o wide


    # Build the Docker image
    # - name: Build
    #   run: |-
    #     docker build \
    #       --tag "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:$IMAGE_TAG" \
    #       --build-arg GITHUB_SHA="$GITHUB_SHA" \
    #       --build-arg GITHUB_REF="$GITHUB_REF" \
    #       .
    # # Push the Docker image to Google Container Registry
    # - name: Publish
    #   run: |-
    #     docker push "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:$IMAGE_TAG"

    # # Deploy the Docker image to the GKE cluster
    # - name: Deploy
    #   run: |-
    #     kubectl apply -f deploy.yml
    #     kubectl get pods
# name: Deploy to GKE

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Cloud SDK
#       uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
#       with:
#         project_id: ${{ secrets.GCP_PROJECT_ID }}
#         service_account_key: ${{ secrets.GCP_SA_KEY }}
#         export_default_credentials: true

#     # Configure Docker to use the gcloud command-line tool as a credential
#     # helper for authentication
#     - run: |-
#         gcloud --quiet auth configure-docker

#     - name: Build Docker image
#       run: |
#         docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app:${{ github.sha }} .

#     - name: Push Docker image to GCR
#       run: |
#         docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app:${{ github.sha }}

#     - name: Set up Kustomize
#       uses: imranismail/setup-kustomize@v1

#     - name: Deploy to GKE
#       run: |
#         kubectl set image deployment/my-app my-app=gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app:${{ github.sha }}

# # # This workflow uses actions that are not certified by GitHub.
# # # They are provided by a third-party and are governed by
# # # separate terms of service, privacy policy, and support
# # # documentation.

# # # GitHub recommends pinning actions to a commit SHA.
# # # To get a newer version, you will need to update the SHA.
# # # You can also reference a tag or branch, but the action may change without warning.

# # name: Build and Deploy to GKE

# # on:
# #   push:
# #     branches:
# #       - main

# # env:
# #   PROJECT_ID: ${{ secrets.GKE_PROJECT }}
# #   GKE_CLUSTER: autopilot-cluster-1    # Add your cluster name here.
# #   GKE_ZONE: us-central1   # Add your cluster zone here.
# #   DEPLOYMENT_NAME: gke-test # Add your deployment name here.
# #   IMAGE: static-site
# #   GCLOUD_PROJECT: ${{ secrets.GKE_PROJECT }}

# # jobs:
# #   setup-build-publish-deploy:
# #     name: Setup, Build, Publish, and Deploy
# #     runs-on: ubuntu-latest
# #     environment: production

# #     steps:
# #     - name: Checkout
# #       uses: actions/checkout@v4

# #     # Setup gcloud CLI
# #     - uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
# #       with:
# #         service_account_key: ${{ secrets.GKE_SA_KEY }}
# #         project_id: ${{ secrets.GKE_PROJECT }}

# #     # Configure Docker to use the gcloud command-line tool as a credential
# #     # helper for authentication
# #     - run: |-
# #         gcloud --quiet auth configure-docker

# #     # Get the GKE credentials so we can deploy to the cluster
# #     - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
# #       with:
# #         cluster_name: ${{ env.GKE_CLUSTER }}
# #         location: ${{ env.GKE_ZONE }}
# #         credentials: ${{ secrets.GKE_SA_KEY }}

# #     # Build the Docker image
# #     - name: Build
# #       run: |-
# #         docker build \
# #           --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
# #           --build-arg GITHUB_SHA="$GITHUB_SHA" \
# #           --build-arg GITHUB_REF="$GITHUB_REF" \
# #           .

# #     # Push the Docker image to Google Container Registry
# #     - name: Publish
# #       run: |-
# #         docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

# #     # # Set up kustomize
# #     # - name: Set up Kustomize
# #     #   run: |-
# #     #     curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
# #     #     chmod u+x ./kustomize

# #     # # Deploy the Docker image to the GKE cluster
# #     # - name: Deploy
# #     #   run: |-
# #     #     ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
# #     #     ./kustomize build . | kubectl apply -f -
# #     #     kubectl rollout status deployment/$DEPLOYMENT_NAME
# #     #     kubectl get services -o wide
